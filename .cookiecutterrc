# This file exists so you can easily regenerate your project.
#
# `cookiepatcher` is a convenient shim around `cookiecutter`
# for regenerating projects (it will generate a .cookiecutterrc
# automatically for any template). To use it:
#
#    pip install cookiepatcher
#    cookiepatcher gh:ionelmc/cookiecutter-pylibrary mloq-template
#
# See:
#    https://pypi.org/project/cookiepatcher
#
# Alternatively, you can run:
#
#    cookiecutter --overwrite-if-exists --config-file=mloq-template/.cookiecutterrc gh:ionelmc/cookiecutter-pylibrary

default_context:
    codecov: "yes"
    command_line_interface: "click"
    command_line_interface_bin_name: "mloq-template"
    distribution_name: "mloq-template"
    docstring_code_line_length: "99"
    email: "guillem@fragile.tech"
    formatter_quote_style: "double"
    full_name: "Guillem Duran Ballester"
    function_name: "compute"
    github_actions: "yes"
    github_actions_osx: "yes"
    github_actions_windows: "yes"
    license: "MIT license"
    line_length: "99"
    lock_file_support: false
    module_name: "core"
    package_name: "mloq_template"
    pre_commit: "yes"
    project_name: "MLOQ Template"
    project_short_description: "Automate project creation following ML best practices."
    project_slug: "mloq-template"
    pypi_badge: "yes"
    pypi_disable_upload: "no"
    release_date: "today"
    repo_hosting: "github.com"
    repo_hosting_domain: "github.com"
    repo_main_branch: "main"
    repo_name: "mloq-template"
    repo_url: "https://github.com/FragileTech/mloq-template"
    repo_username: "FragileTech"
    sphinx_docs: "yes"
    sphinx_docs_hosting: "https://mloq-template.readthedocs.io/"
    target_python_version: "3.10"
    version: "0.1.0"
    website: "fragile.tech"
    year_from: "2024"
    year_to: "2024"
